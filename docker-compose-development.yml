services:
  mongo:
    image: mongo:8.0.15-noble
    container_name: mongo-word-db
    command: ["--auth"]
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - app_network
    volumes:
      - mongo-impostor:/data/db
      - mongo-impostor-config:/data/configdb
      - ./scripts/mongo:/docker-entrypoint-initdb.d

  backend:
    build:
      context: .
      target: backend
    container_name: impostor-backend-dev
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - LOG_LEVEL=${LOG_LEVEL}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DATABASE=${MONGO_DATABASE}
    ports:
      - "3000:3000"
    networks:
      - app_network
    depends_on:
      - mongo
    volumes:
      - ./packages/backend/src:/app/src
      - ./packages/backend/package.json:/app/packages/backend/package.json
    command: pnpm --filter @impostor/backend dev

  frontend:
    build:
      context: .
      target: frontend
      dockerfile: Dockerfile
    container_name: impostor-frontend-dev
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
      - VITE_WS_BASE_URL=${VITE_WS_BASE_URL}
    ports:
      - "5173:5173"
    networks:
      - app_network
    depends_on:
      - backend
    volumes:
      # Mount source for hot reload in development
      - ./packages/frontend/src:/app/packages/frontend/src
      - ./packages/frontend/package.json:/app/packages/frontend/package.json
    command: pnpm --filter @impostor/frontend dev --host


volumes:
  mongo-impostor:
  mongo-impostor-config:
networks:
  app_network: